{"version":3,"sources":["../../node_modules/ramda/src/internal/_isPlaceholder.js","../../node_modules/ramda/src/internal/_curry1.js","../../node_modules/ramda/src/internal/_has.js","../../node_modules/ramda/src/internal/_isArguments.js","../../node_modules/ramda/src/internal/_isArray.js","../../node_modules/ramda/src/internal/_isObject.js","../../node_modules/ramda/src/internal/_isString.js","../../node_modules/ramda/src/empty.js","../../node_modules/ramda/src/internal/_curry2.js","../../node_modules/ramda/src/internal/_arrayFromIterator.js","../../node_modules/ramda/src/internal/_includesWith.js","../../node_modules/ramda/src/internal/_functionName.js","../../node_modules/ramda/src/internal/_objectIs.js","../../node_modules/ramda/src/keys.js","../../node_modules/ramda/src/type.js","../../node_modules/ramda/src/internal/_equals.js","../../node_modules/ramda/src/equals.js","../../node_modules/ramda/src/isEmpty.js","../constants/action-types/index.js","../../node_modules/ramda/src/internal/_arity.js","../../node_modules/ramda/src/internal/_curryN.js","../../node_modules/ramda/src/curryN.js","../get-action/index.js","../get-action-creator/index.js","../../node_modules/ramda/src/pick.js","../../node_modules/ramda/src/pair.js","../../node_modules/ramda/src/internal/_objectAssign.js","../../node_modules/ramda/src/mergeAll.js","../../node_modules/ramda/src/internal/_pipe.js","../../node_modules/ramda/src/internal/_curry3.js","../../node_modules/ramda/src/internal/_isArrayLike.js","../../node_modules/ramda/src/internal/_xwrap.js","../../node_modules/ramda/src/bind.js","../../node_modules/ramda/src/internal/_reduce.js","../../node_modules/ramda/src/reduce.js","../../node_modules/ramda/src/internal/_checkForMethod.js","../../node_modules/ramda/src/slice.js","../../node_modules/ramda/src/tail.js","../../node_modules/ramda/src/pipe.js","../../node_modules/ramda/src/reverse.js","../../node_modules/ramda/src/compose.js","../get-empty-state/index.js","../get-initial-state/index.js","../get-value-by-key-or-default/index.js","../get-action-handlers/index.js","../../node_modules/ramda/src/__.js","../../node_modules/ramda/src/internal/_concat.js","../../node_modules/ramda/src/append.js","../../node_modules/ramda/src/internal/_isInteger.js","../../node_modules/ramda/src/nth.js","../../node_modules/ramda/src/paths.js","../../node_modules/ramda/src/path.js","../../node_modules/ramda/src/internal/_identity.js","../../node_modules/ramda/src/identity.js","../../node_modules/ramda/src/objOf.js","../../node_modules/ramda/src/internal/_map.js","../../node_modules/ramda/src/max.js","../../node_modules/ramda/src/internal/_isTransformer.js","../../node_modules/ramda/src/internal/_dispatchable.js","../../node_modules/ramda/src/internal/_xfBase.js","../../node_modules/ramda/src/internal/_xmap.js","../../node_modules/ramda/src/map.js","../../node_modules/ramda/src/prop.js","../../node_modules/ramda/src/pluck.js","../../node_modules/ramda/src/converge.js","../get-pure-selectors-for-module-state/index.js","../get-reducer/index.js","../throw-error/index.js","../get-procedure/index.js"],"names":["ERROR","RECEIVE","REQUEST","RESET","ACTIONS","getAction","moduleName","type","actionTypesByType","getActionCreator","upperCaseType","toUpperCase","createActionForActionType","actionCreatorsByActionType","payload","getEmptyState","data","error","isInProcess","getInitialState","getValueByKeyOrDefault","object","valueKey","defaultValue","Object","prototype","hasOwnProperty","call","getActionHandlers","stateDefaults","getValueFor","getValueForData","getValueForError","getValueForIsInProcess","_","getPureSelectorsForModuleState","stateObject","getReducer","options","actionHandlersByActionType","initialState","state","actionHandler","throwError","fnName","message","Error","getProcedure","request","throwProcedureError","toString","actionHandlers","reducer","selectors","actionCreatorsByType","reduce","acc","actionType"],"mappings":"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","file":"get-procedure.js","sourceRoot":"..\\src\\get-procedure","sourcesContent":["function _isPlaceholder(a) {\n  return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}\n\nmodule.exports = _isPlaceholder;","var _isPlaceholder =\n/*#__PURE__*/\nrequire(\"./_isPlaceholder\");\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}\n\nmodule.exports = _curry1;","function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = _has;","var _has =\n/*#__PURE__*/\nrequire(\"./_has\");\n\nvar toString = Object.prototype.toString;\n\nvar _isArguments =\n/*#__PURE__*/\nfunction () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n}();\n\nmodule.exports = _isArguments;","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nmodule.exports = Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}\n\nmodule.exports = _isObject;","function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}\n\nmodule.exports = _isString;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _isArguments =\n/*#__PURE__*/\nrequire(\"./internal/_isArguments\");\n\nvar _isArray =\n/*#__PURE__*/\nrequire(\"./internal/_isArray\");\n\nvar _isObject =\n/*#__PURE__*/\nrequire(\"./internal/_isObject\");\n\nvar _isString =\n/*#__PURE__*/\nrequire(\"./internal/_isString\");\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n * types are supported if they define `<Type>.empty`,\n * `<Type>.prototype.empty` or implement the\n * [FantasyLand Monoid spec](https://github.com/fantasyland/fantasy-land#monoid).\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));      //=> Nothing()\n *      R.empty([1, 2, 3]);     //=> []\n *      R.empty('unicorns');    //=> ''\n *      R.empty({x: 1, y: 2});  //=> {}\n */\n\n\nvar empty =\n/*#__PURE__*/\n_curry1(function empty(x) {\n  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n    return arguments;\n  }() : void 0 // else\n  ;\n});\n\nmodule.exports = empty;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./_curry1\");\n\nvar _isPlaceholder =\n/*#__PURE__*/\nrequire(\"./_isPlaceholder\");\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}\n\nmodule.exports = _curry2;","function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n\n  return list;\n}\n\nmodule.exports = _arrayFromIterator;","function _includesWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n}\n\nmodule.exports = _includesWith;","function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}\n\nmodule.exports = _functionName;","// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nfunction _objectIs(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n}\n\nmodule.exports = typeof Object.is === 'function' ? Object.is : _objectIs;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _has =\n/*#__PURE__*/\nrequire(\"./internal/_has\");\n\nvar _isArguments =\n/*#__PURE__*/\nrequire(\"./internal/_isArguments\"); // cover IE < 9 keys issues\n\n\nvar hasEnumBug = !\n/*#__PURE__*/\n{\n  toString: null\n}.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString']; // Safari bug\n\nvar hasArgsEnumBug =\n/*#__PURE__*/\nfunction () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n};\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\n\n\nvar keys = typeof Object.keys === 'function' && !hasArgsEnumBug ?\n/*#__PURE__*/\n_curry1(function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n}) :\n/*#__PURE__*/\n_curry1(function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n\n  var prop, nIdx;\n  var ks = [];\n\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n\n      nIdx -= 1;\n    }\n  }\n\n  return ks;\n});\nmodule.exports = keys;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\n\n\nvar type =\n/*#__PURE__*/\n_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\n\nmodule.exports = type;","var _arrayFromIterator =\n/*#__PURE__*/\nrequire(\"./_arrayFromIterator\");\n\nvar _includesWith =\n/*#__PURE__*/\nrequire(\"./_includesWith\");\n\nvar _functionName =\n/*#__PURE__*/\nrequire(\"./_functionName\");\n\nvar _has =\n/*#__PURE__*/\nrequire(\"./_has\");\n\nvar _objectIs =\n/*#__PURE__*/\nrequire(\"./_objectIs\");\n\nvar keys =\n/*#__PURE__*/\nrequire(\"../keys\");\n\nvar type =\n/*#__PURE__*/\nrequire(\"../type\");\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  } // if *a* array contains any element that is not included in *b*\n\n\n  return !_includesWith(function (b, aItem) {\n    return !_includesWith(eq, aItem, b);\n  }, b, a);\n}\n\nfunction _equals(a, b, stackA, stackB) {\n  if (_objectIs(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n\n      break;\n\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && _objectIs(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n\n      break;\n\n    case 'Date':\n      if (!_objectIs(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n\n      break;\n\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n\n      break;\n  }\n\n  var idx = stackA.length - 1;\n\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n  idx = keysA.length - 1;\n\n  while (idx >= 0) {\n    var key = keysA[idx];\n\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n\n    idx -= 1;\n  }\n\n  return true;\n}\n\nmodule.exports = _equals;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _equals =\n/*#__PURE__*/\nrequire(\"./internal/_equals\");\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      const a = {}; a.v = a;\n *      const b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\n\n\nvar equals =\n/*#__PURE__*/\n_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\n\nmodule.exports = equals;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar empty =\n/*#__PURE__*/\nrequire(\"./empty\");\n\nvar equals =\n/*#__PURE__*/\nrequire(\"./equals\");\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);   //=> false\n *      R.isEmpty([]);          //=> true\n *      R.isEmpty('');          //=> true\n *      R.isEmpty(null);        //=> false\n *      R.isEmpty({});          //=> true\n *      R.isEmpty({length: 0}); //=> false\n */\n\n\nvar isEmpty =\n/*#__PURE__*/\n_curry1(function isEmpty(x) {\n  return x != null && equals(x, empty(x));\n});\n\nmodule.exports = isEmpty;","// Actions\r\nexport const ERROR = 'ERROR';\r\nexport const RECEIVE = 'RECEIVE';\r\nexport const REQUEST = 'REQUEST';\r\nexport const RESET = 'RESET';\r\n\r\nexport const ACTIONS = [ERROR, RECEIVE, REQUEST, RESET];","function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}\n\nmodule.exports = _arity;","var _arity =\n/*#__PURE__*/\nrequire(\"./_arity\");\n\nvar _isPlaceholder =\n/*#__PURE__*/\nrequire(\"./_isPlaceholder\");\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n\n      combined[combinedIdx] = result;\n\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n\n      combinedIdx += 1;\n    }\n\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}\n\nmodule.exports = _curryN;","var _arity =\n/*#__PURE__*/\nrequire(\"./internal/_arity\");\n\nvar _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _curryN =\n/*#__PURE__*/\nrequire(\"./internal/_curryN\");\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      const sumArgs = (...args) => R.sum(args);\n *\n *      const curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\n\nvar curryN =\n/*#__PURE__*/\n_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n\n  return _arity(length, _curryN(length, [], fn));\n});\n\nmodule.exports = curryN;","import { ERROR, RECEIVE, REQUEST, RESET } from '../constants/action-types';\r\n\r\nexport const getAction = moduleName => type => {\r\n    const actionTypesByType = {\r\n        ERROR,\r\n        RECEIVE,\r\n        REQUEST,\r\n        RESET,\r\n    };\r\n\r\n    return `${moduleName}/${actionTypesByType[type]}`;\r\n};","import { curryN } from 'ramda';\r\n\r\nimport { ERROR, RECEIVE, REQUEST, RESET } from '../constants/action-types';\r\nimport { getAction } from '../get-action';\r\n\r\n\r\n// Action creators\r\nexport const getActionCreator = curryN(2, (moduleName, type) => {\r\n    const upperCaseType = type.toUpperCase();\r\n    const createActionForActionType = getAction(moduleName);\r\n\r\n    const actionCreatorsByActionType = {\r\n        [ERROR]: payload => ({\r\n            payload,\r\n            type: createActionForActionType(ERROR),\r\n        }),\r\n\r\n        [RECEIVE]: payload => ({\r\n            payload,\r\n            type: createActionForActionType(RECEIVE),\r\n        }),\r\n\r\n        [REQUEST]: () => ({\r\n            type: createActionForActionType(REQUEST),\r\n        }),\r\n\r\n        [RESET]: () => ({\r\n            type: createActionForActionType(RESET),\r\n        }),\r\n    };\r\n\r\n    return actionCreatorsByActionType[upperCaseType];\r\n});","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns a partial copy of an object containing only the keys specified. If\n * the key does not exist, the property is ignored.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.omit, R.props\n * @example\n *\n *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n */\n\n\nvar pick =\n/*#__PURE__*/\n_curry2(function pick(names, obj) {\n  var result = {};\n  var idx = 0;\n\n  while (idx < names.length) {\n    if (names[idx] in obj) {\n      result[names[idx]] = obj[names[idx]];\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nmodule.exports = pick;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category List\n * @sig a -> b -> (a,b)\n * @param {*} fst\n * @param {*} snd\n * @return {Array}\n * @see R.objOf, R.of\n * @example\n *\n *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n */\n\n\nvar pair =\n/*#__PURE__*/\n_curry2(function pair(fst, snd) {\n  return [fst, snd];\n});\n\nmodule.exports = pair;","var _has =\n/*#__PURE__*/\nrequire(\"./_has\"); // Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\nfunction _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n\n  while (idx < length) {\n    var source = arguments[idx];\n\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n\n    idx += 1;\n  }\n\n  return output;\n}\n\nmodule.exports = typeof Object.assign === 'function' ? Object.assign : _objectAssign;","var _objectAssign =\n/*#__PURE__*/\nrequire(\"./internal/_objectAssign\");\n\nvar _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n/**\n * Merges a list of objects together into one object.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\n\n\nvar mergeAll =\n/*#__PURE__*/\n_curry1(function mergeAll(list) {\n  return _objectAssign.apply(null, [{}].concat(list));\n});\n\nmodule.exports = mergeAll;","function _pipe(f, g) {\n  return function () {\n    return g.call(this, f.apply(this, arguments));\n  };\n}\n\nmodule.exports = _pipe;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./_curry1\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _isPlaceholder =\n/*#__PURE__*/\nrequire(\"./_isPlaceholder\");\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}\n\nmodule.exports = _curry3;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./_curry1\");\n\nvar _isArray =\n/*#__PURE__*/\nrequire(\"./_isArray\");\n\nvar _isString =\n/*#__PURE__*/\nrequire(\"./_isString\");\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\n\n\nvar _isArrayLike =\n/*#__PURE__*/\n_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n\n  if (!x) {\n    return false;\n  }\n\n  if (typeof x !== 'object') {\n    return false;\n  }\n\n  if (_isString(x)) {\n    return false;\n  }\n\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n\n  if (x.length === 0) {\n    return true;\n  }\n\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n\n  return false;\n});\n\nmodule.exports = _isArrayLike;","var XWrap =\n/*#__PURE__*/\nfunction () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nfunction _xwrap(fn) {\n  return new XWrap(fn);\n}\n\nmodule.exports = _xwrap;","var _arity =\n/*#__PURE__*/\nrequire(\"./internal/_arity\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      const log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\n\n\nvar bind =\n/*#__PURE__*/\n_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\n\nmodule.exports = bind;","var _isArrayLike =\n/*#__PURE__*/\nrequire(\"./_isArrayLike\");\n\nvar _xwrap =\n/*#__PURE__*/\nrequire(\"./_xwrap\");\n\nvar bind =\n/*#__PURE__*/\nrequire(\"../bind\");\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    idx += 1;\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    step = iter.next();\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n\nfunction _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}\n\nmodule.exports = _reduce;","var _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n\nvar _reduce =\n/*#__PURE__*/\nrequire(\"./internal/_reduce\");\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\n\n\nvar reduce =\n/*#__PURE__*/\n_curry3(_reduce);\n\nmodule.exports = reduce;","var _isArray =\n/*#__PURE__*/\nrequire(\"./_isArray\");\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\n\n\nfunction _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n\n    if (length === 0) {\n      return fn();\n    }\n\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}\n\nmodule.exports = _checkForMethod;","var _checkForMethod =\n/*#__PURE__*/\nrequire(\"./internal/_checkForMethod\");\n\nvar _curry3 =\n/*#__PURE__*/\nrequire(\"./internal/_curry3\");\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\n\n\nvar slice =\n/*#__PURE__*/\n_curry3(\n/*#__PURE__*/\n_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\n\nmodule.exports = slice;","var _checkForMethod =\n/*#__PURE__*/\nrequire(\"./internal/_checkForMethod\");\n\nvar _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar slice =\n/*#__PURE__*/\nrequire(\"./slice\");\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\n\n\nvar tail =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_checkForMethod('tail',\n/*#__PURE__*/\nslice(1, Infinity)));\n\nmodule.exports = tail;","var _arity =\n/*#__PURE__*/\nrequire(\"./internal/_arity\");\n\nvar _pipe =\n/*#__PURE__*/\nrequire(\"./internal/_pipe\");\n\nvar reduce =\n/*#__PURE__*/\nrequire(\"./reduce\");\n\nvar tail =\n/*#__PURE__*/\nrequire(\"./tail\");\n/**\n * Performs left-to-right function composition. The first argument may have\n * any arity; the remaining arguments must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      const f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\n\n\nfunction pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}\n\nmodule.exports = pipe;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _isString =\n/*#__PURE__*/\nrequire(\"./internal/_isString\");\n/**\n * Returns a new list or string with the elements or characters in reverse\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {Array|String} list\n * @return {Array|String}\n * @example\n *\n *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n *      R.reverse([1, 2]);     //=> [2, 1]\n *      R.reverse([1]);        //=> [1]\n *      R.reverse([]);         //=> []\n *\n *      R.reverse('abc');      //=> 'cba'\n *      R.reverse('ab');       //=> 'ba'\n *      R.reverse('a');        //=> 'a'\n *      R.reverse('');         //=> ''\n */\n\n\nvar reverse =\n/*#__PURE__*/\n_curry1(function reverse(list) {\n  return _isString(list) ? list.split('').reverse().join('') : Array.prototype.slice.call(list, 0).reverse();\n});\n\nmodule.exports = reverse;","var pipe =\n/*#__PURE__*/\nrequire(\"./pipe\");\n\nvar reverse =\n/*#__PURE__*/\nrequire(\"./reverse\");\n/**\n * Performs right-to-left function composition. The last argument may have\n * any arity; the remaining arguments must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      const classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      const yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n */\n\n\nfunction compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n\n  return pipe.apply(this, reverse(arguments));\n}\n\nmodule.exports = compose;","// State structure\r\nexport const getEmptyState = () => ({\r\n    data: null,\r\n    error: null,\r\n    isInProcess: false,\r\n});","import {\r\n    compose,\r\n    mergeAll,\r\n    pair,\r\n    pick,\r\n} from 'ramda';\r\n\r\nimport { getEmptyState } from '../get-empty-state';\r\n\r\n/**\r\n * @param {Object} stateDefaults\r\n * @return {Object} result\r\n * @return {Object|null|*} result.data\r\n * @return {Object|null} result.error\r\n * @return {boolean} result.isInProcess\r\n */\r\nexport const getInitialState = compose(\r\n    mergeAll,\r\n    pair(getEmptyState()),\r\n    pick(['data', 'error', 'isInProcess']),\r\n);","// Action handlers\r\nexport const getValueByKeyOrDefault = object => valueKey => defaultValue => {\r\n    if (Object.prototype.hasOwnProperty.call(object, valueKey)) {\r\n        return object[valueKey];\r\n    }\r\n\r\n    return defaultValue;\r\n};","import { getAction } from '../get-action';\r\nimport { getInitialState } from '../get-initial-state';\r\nimport { getValueByKeyOrDefault } from '../get-value-by-key-or-default';\r\nimport { ERROR, RECEIVE, REQUEST, RESET } from '../constants/action-types';\r\n\r\nexport const getActionHandlers = (moduleName, stateDefaults) => {\r\n    const createActionForActionType = getAction(moduleName);\r\n    const getValueFor = getValueByKeyOrDefault(stateDefaults);\r\n    const getValueForData = getValueFor('data');\r\n    const getValueForError = getValueFor('error');\r\n    const getValueForIsInProcess = getValueFor('isInProcess');\r\n\r\n    return {\r\n        [createActionForActionType(ERROR)]: (_, payload) => ({\r\n            data: getValueForData(null),\r\n            error: payload,\r\n            isInProcess: getValueForIsInProcess(false),\r\n        }),\r\n\r\n        [createActionForActionType(RECEIVE)]: (_, payload) => ({\r\n            data: payload,\r\n            error: getValueForError(false),\r\n            isInProcess: getValueForIsInProcess(false),\r\n        }),\r\n\r\n        [createActionForActionType(REQUEST)]: () => ({\r\n            data: getValueForData(null),\r\n            error: getValueForError(null),\r\n            isInProcess: true,\r\n        }),\r\n\r\n        [createActionForActionType(RESET)]: () => getInitialState(stateDefaults),\r\n    };\r\n};","/**\n * A special placeholder value used to specify \"gaps\" within curried functions,\n * allowing partial application of any combination of arguments, regardless of\n * their positions.\n *\n * If `g` is a curried ternary function and `_` is `R.__`, the following are\n * equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2, _)(1, 3)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @name __\n * @constant\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @example\n *\n *      const greet = R.replace('{name}', R.__, 'Hello, {name}!');\n *      greet('Alice'); //=> 'Hello, Alice!'\n */\nmodule.exports = {\n  '@@functional/placeholder': true\n};","/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nfunction _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n  idx = 0;\n\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n\n  idx = 0;\n\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n\n  return result;\n}\n\nmodule.exports = _concat;","var _concat =\n/*#__PURE__*/\nrequire(\"./internal/_concat\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns a new list containing the contents of the given list, followed by\n * the given element.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The element to add to the end of the new list.\n * @param {Array} list The list of elements to add a new item to.\n *        list.\n * @return {Array} A new list containing the elements of the old list followed by `el`.\n * @see R.prepend\n * @example\n *\n *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n *      R.append('tests', []); //=> ['tests']\n *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n */\n\n\nvar append =\n/*#__PURE__*/\n_curry2(function append(el, list) {\n  return _concat(list, [el]);\n});\n\nmodule.exports = append;","/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nmodule.exports = Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _isString =\n/*#__PURE__*/\nrequire(\"./internal/_isString\");\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      const list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\n\n\nvar nth =\n/*#__PURE__*/\n_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\n\nmodule.exports = nth;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _isInteger =\n/*#__PURE__*/\nrequire(\"./internal/_isInteger\");\n\nvar nth =\n/*#__PURE__*/\nrequire(\"./nth\");\n/**\n * Retrieves the values at given paths of an object.\n *\n * @func\n * @memberOf R\n * @since v0.27.0\n * @category Object\n * @typedefn Idx = [String | Int]\n * @sig [Idx] -> {a} -> [a | Undefined]\n * @param {Array} pathsArray The array of paths to be fetched.\n * @param {Object} obj The object to retrieve the nested properties from.\n * @return {Array} A list consisting of values at paths specified by \"pathsArray\".\n * @see R.path\n * @example\n *\n *      R.paths([['a', 'b'], ['p', 0, 'q']], {a: {b: 2}, p: [{q: 3}]}); //=> [2, 3]\n *      R.paths([['a', 'b'], ['p', 'r']], {a: {b: 2}, p: [{q: 3}]}); //=> [2, undefined]\n */\n\n\nvar paths =\n/*#__PURE__*/\n_curry2(function paths(pathsArray, obj) {\n  return pathsArray.map(function (paths) {\n    var val = obj;\n    var idx = 0;\n    var p;\n\n    while (idx < paths.length) {\n      if (val == null) {\n        return;\n      }\n\n      p = paths[idx];\n      val = _isInteger(p) ? nth(p, val) : val[p];\n      idx += 1;\n    }\n\n    return val;\n  });\n});\n\nmodule.exports = paths;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar paths =\n/*#__PURE__*/\nrequire(\"./paths\");\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop, R.nth\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n *      R.path(['a', 'b', 0], {a: {b: [1, 2, 3]}}); //=> 1\n *      R.path(['a', 'b', -2], {a: {b: [1, 2, 3]}}); //=> 2\n */\n\n\nvar path =\n/*#__PURE__*/\n_curry2(function path(pathAr, obj) {\n  return paths([pathAr], obj)[0];\n});\n\nmodule.exports = path;","function _identity(x) {\n  return x;\n}\n\nmodule.exports = _identity;","var _curry1 =\n/*#__PURE__*/\nrequire(\"./internal/_curry1\");\n\nvar _identity =\n/*#__PURE__*/\nrequire(\"./internal/_identity\");\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      const obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\n\n\nvar identity =\n/*#__PURE__*/\n_curry1(_identity);\n\nmodule.exports = identity;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Creates an object containing a single key:value pair.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @sig String -> a -> {String:a}\n * @param {String} key\n * @param {*} val\n * @return {Object}\n * @see R.pair\n * @example\n *\n *      const matchPhrases = R.compose(\n *        R.objOf('must'),\n *        R.map(R.objOf('match_phrase'))\n *      );\n *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n */\n\n\nvar objOf =\n/*#__PURE__*/\n_curry2(function objOf(key, val) {\n  var obj = {};\n  obj[key] = val;\n  return obj;\n});\n\nmodule.exports = objOf;","function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n\n  return result;\n}\n\nmodule.exports = _map;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\n\n\nvar max =\n/*#__PURE__*/\n_curry2(function max(a, b) {\n  return b > a ? b : a;\n});\n\nmodule.exports = max;","function _isTransformer(obj) {\n  return obj != null && typeof obj['@@transducer/step'] === 'function';\n}\n\nmodule.exports = _isTransformer;","var _isArray =\n/*#__PURE__*/\nrequire(\"./_isArray\");\n\nvar _isTransformer =\n/*#__PURE__*/\nrequire(\"./_isTransformer\");\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\n\n\nfunction _dispatchable(methodNames, xf, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n\n    if (!_isArray(obj)) {\n      var idx = 0;\n\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n\n        idx += 1;\n      }\n\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n\n    return fn.apply(this, arguments);\n  };\n}\n\nmodule.exports = _dispatchable;","module.exports = {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};","var _curry2 =\n/*#__PURE__*/\nrequire(\"./_curry2\");\n\nvar _xfBase =\n/*#__PURE__*/\nrequire(\"./_xfBase\");\n\nvar XMap =\n/*#__PURE__*/\nfunction () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap =\n/*#__PURE__*/\n_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\n\nmodule.exports = _xmap;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _dispatchable =\n/*#__PURE__*/\nrequire(\"./internal/_dispatchable\");\n\nvar _map =\n/*#__PURE__*/\nrequire(\"./internal/_map\");\n\nvar _reduce =\n/*#__PURE__*/\nrequire(\"./internal/_reduce\");\n\nvar _xmap =\n/*#__PURE__*/\nrequire(\"./internal/_xmap\");\n\nvar curryN =\n/*#__PURE__*/\nrequire(\"./curryN\");\n\nvar keys =\n/*#__PURE__*/\nrequire(\"./keys\");\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      const double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\n\n\nvar map =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n\n    default:\n      return _map(fn, functor);\n  }\n}));\n\nmodule.exports = map;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar path =\n/*#__PURE__*/\nrequire(\"./path\");\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig Idx -> {s: a} -> a | Undefined\n * @param {String|Number} p The property name or array index\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path, R.nth\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n *      R.prop(0, [100]); //=> 100\n *      R.compose(R.inc, R.prop('x'))({ x: 3 }) //=> 4\n */\n\n\nvar prop =\n/*#__PURE__*/\n_curry2(function prop(p, obj) {\n  return path([p], obj);\n});\n\nmodule.exports = prop;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar map =\n/*#__PURE__*/\nrequire(\"./map\");\n\nvar prop =\n/*#__PURE__*/\nrequire(\"./prop\");\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      var getAges = R.pluck('age');\n *      getAges([{name: 'fred', age: 29}, {name: 'wilma', age: 27}]); //=> [29, 27]\n *\n *      R.pluck(0, [[1, 2], [3, 4]]);               //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\n\n\nvar pluck =\n/*#__PURE__*/\n_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\n\nmodule.exports = pluck;","var _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n\nvar _map =\n/*#__PURE__*/\nrequire(\"./internal/_map\");\n\nvar curryN =\n/*#__PURE__*/\nrequire(\"./curryN\");\n\nvar max =\n/*#__PURE__*/\nrequire(\"./max\");\n\nvar pluck =\n/*#__PURE__*/\nrequire(\"./pluck\");\n\nvar reduce =\n/*#__PURE__*/\nrequire(\"./reduce\");\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. The arity of the new function is the same as the arity of\n * the longest branching function. When invoked, this new function is applied\n * to some arguments, and each branching function is applied to those same\n * arguments. The results of each branching function are passed as arguments\n * to the converging function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [((a, b, ...) -> x1), ((a, b, ...) -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      const average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      const strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\n\n\nvar converge =\n/*#__PURE__*/\n_curry2(function converge(after, fns) {\n  return curryN(reduce(max, 0, pluck('length', fns)), function () {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, _map(function (fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\n\nmodule.exports = converge;","import {\r\n    __,\r\n    append,\r\n    compose,\r\n    converge,\r\n    identity,\r\n    keys,\r\n    map,\r\n    mergeAll,\r\n    objOf,\r\n    path,\r\n} from 'ramda';\r\n\r\n/**\r\n * Get carried function for getting part of store\r\n * @param {Array} moduleName\r\n * @param {Object} stateObject\r\n * @return {Array<function>}\r\n */\r\nexport const getPureSelectorsForModuleState = (moduleName, stateObject) => compose(\r\n    mergeAll,\r\n    map(converge(\r\n        objOf,\r\n        [\r\n            identity,\r\n            compose(\r\n                path,\r\n                append(__, moduleName),\r\n            ),\r\n        ],\r\n    )),\r\n    keys,\r\n)(stateObject);","/**\r\n * @param {Object} options\r\n * @param {Object} options.actionHandlersByActionType\r\n * @param {Object|Array} options.initialState\r\n * @returns {Function}\r\n */\r\nexport const getReducer = options => {\r\n    const {\r\n        actionHandlersByActionType,\r\n        initialState,\r\n    } = options;\r\n\r\n    return (state = initialState, { payload, type }) => {\r\n        const actionHandler = actionHandlersByActionType[type];\r\n\r\n        if (actionHandler) {\r\n            return actionHandler(state, payload);\r\n        }\r\n\r\n        return state;\r\n    };\r\n};","export const throwError = fnName => message => {\r\n    throw new Error(`[${fnName}]: ${message}`);\r\n};","import { isEmpty } from 'ramda';\r\n\r\nimport { ACTIONS } from '../constants/action-types';\r\nimport { getActionCreator } from '../get-action-creator';\r\nimport { getActionHandlers } from '../get-action-handlers';\r\nimport { getInitialState } from '../get-initial-state';\r\nimport { getPureSelectorsForModuleState } from '../get-pure-selectors-for-module-state';\r\nimport { getReducer } from '../get-reducer';\r\nimport { throwError } from '../throw-error';\r\n\r\n/**\r\n *\r\n * @param {string} moduleName\r\n * @param {function} request\r\n * @param {StateDefaults} stateDefaults\r\n * @returns {Procedure}\r\n */\r\nexport const getProcedure = (moduleName, request, stateDefaults = {}) => {\r\n    const throwProcedureError = throwError('getProcedure');\r\n\r\n    if (isEmpty(moduleName)) {\r\n        throwProcedureError('moduleName cannot be an empty string');\r\n    }\r\n\r\n    if (typeof request !== 'function') {\r\n        throwProcedureError(`request should be a function`);\r\n    }\r\n\r\n    if (Object.prototype.toString.call(stateDefaults) !== '[object Object]') {\r\n        throwProcedureError(`stateDefaults should be an object`);\r\n    }\r\n\r\n    const actionHandlers = getActionHandlers(moduleName, stateDefaults);\r\n    const initialState = getInitialState(stateDefaults);\r\n    const reducer = getReducer({\r\n        actionHandlersByActionType: actionHandlers,\r\n        initialState,\r\n    });\r\n    const selectors = getPureSelectorsForModuleState([moduleName], initialState);\r\n    const actionCreatorsByType = ACTIONS.reduce((acc, actionType) => {\r\n        acc[actionType] = getActionCreator(moduleName, actionType);\r\n\r\n        return acc;\r\n    }, {});\r\n\r\n    return {\r\n        actionCreatorsByType,\r\n        reducer,\r\n        selectors,\r\n    };\r\n};"]}